// Generated from java-escape by ANTLR 4.11.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,58,527,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,
5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,
1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,
12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,
14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,1,19,
1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,
26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,32,
1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,3,35,276,8,35,1,36,
1,36,5,36,280,8,36,10,36,12,36,283,9,36,1,37,4,37,286,8,37,11,37,12,37,287,
1,38,1,38,5,38,292,8,38,10,38,12,38,295,9,38,1,38,1,38,1,39,1,39,1,40,4,
40,302,8,40,11,40,12,40,303,1,40,1,40,1,41,1,41,1,41,1,41,5,41,312,8,41,
10,41,12,41,315,9,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,5,42,325,8,
42,10,42,12,42,328,9,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,
1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,
47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,
1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,
48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,
50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,
52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,
53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,
1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,
55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,
1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,2,
313,326,0,58,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,
37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,
49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,1,0,4,2,
0,65,90,97,122,1,0,48,57,2,0,34,34,39,39,2,0,9,10,32,32,533,0,1,1,0,0,0,
0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,
1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,
0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,
59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,
0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,
0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,
1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,
0,0,0,0,115,1,0,0,0,1,117,1,0,0,0,3,119,1,0,0,0,5,121,1,0,0,0,7,123,1,0,
0,0,9,126,1,0,0,0,11,129,1,0,0,0,13,132,1,0,0,0,15,135,1,0,0,0,17,138,1,
0,0,0,19,141,1,0,0,0,21,144,1,0,0,0,23,148,1,0,0,0,25,152,1,0,0,0,27,163,
1,0,0,0,29,183,1,0,0,0,31,197,1,0,0,0,33,220,1,0,0,0,35,223,1,0,0,0,37,228,
1,0,0,0,39,232,1,0,0,0,41,236,1,0,0,0,43,238,1,0,0,0,45,240,1,0,0,0,47,242,
1,0,0,0,49,244,1,0,0,0,51,246,1,0,0,0,53,248,1,0,0,0,55,250,1,0,0,0,57,252,
1,0,0,0,59,254,1,0,0,0,61,256,1,0,0,0,63,258,1,0,0,0,65,263,1,0,0,0,67,269,
1,0,0,0,69,271,1,0,0,0,71,275,1,0,0,0,73,277,1,0,0,0,75,285,1,0,0,0,77,289,
1,0,0,0,79,298,1,0,0,0,81,301,1,0,0,0,83,307,1,0,0,0,85,320,1,0,0,0,87,334,
1,0,0,0,89,339,1,0,0,0,91,342,1,0,0,0,93,348,1,0,0,0,95,353,1,0,0,0,97,377,
1,0,0,0,99,388,1,0,0,0,101,400,1,0,0,0,103,419,1,0,0,0,105,439,1,0,0,0,107,
460,1,0,0,0,109,479,1,0,0,0,111,489,1,0,0,0,113,509,1,0,0,0,115,517,1,0,
0,0,117,118,5,44,0,0,118,2,1,0,0,0,119,120,5,123,0,0,120,4,1,0,0,0,121,122,
5,125,0,0,122,6,1,0,0,0,123,124,5,43,0,0,124,125,5,61,0,0,125,8,1,0,0,0,
126,127,5,45,0,0,127,128,5,61,0,0,128,10,1,0,0,0,129,130,5,42,0,0,130,131,
5,61,0,0,131,12,1,0,0,0,132,133,5,47,0,0,133,134,5,61,0,0,134,14,1,0,0,0,
135,136,5,43,0,0,136,137,5,43,0,0,137,16,1,0,0,0,138,139,5,45,0,0,139,140,
5,45,0,0,140,18,1,0,0,0,141,142,5,111,0,0,142,143,5,114,0,0,143,20,1,0,0,
0,144,145,5,97,0,0,145,146,5,110,0,0,146,147,5,100,0,0,147,22,1,0,0,0,148,
149,5,110,0,0,149,150,5,111,0,0,150,151,5,116,0,0,151,24,1,0,0,0,152,153,
5,105,0,0,153,154,5,115,0,0,154,155,5,108,0,0,155,156,5,101,0,0,156,157,
5,115,0,0,157,158,5,115,0,0,158,159,5,116,0,0,159,160,5,104,0,0,160,161,
5,97,0,0,161,162,5,110,0,0,162,26,1,0,0,0,163,164,5,105,0,0,164,165,5,115,
0,0,165,166,5,108,0,0,166,167,5,101,0,0,167,168,5,115,0,0,168,169,5,115,
0,0,169,170,5,116,0,0,170,171,5,104,0,0,171,172,5,97,0,0,172,173,5,110,0,
0,173,174,5,111,0,0,174,175,5,114,0,0,175,176,5,101,0,0,176,177,5,113,0,
0,177,178,5,117,0,0,178,179,5,97,0,0,179,180,5,108,0,0,180,181,5,116,0,0,
181,182,5,111,0,0,182,28,1,0,0,0,183,184,5,105,0,0,184,185,5,115,0,0,185,
186,5,103,0,0,186,187,5,114,0,0,187,188,5,101,0,0,188,189,5,97,0,0,189,190,
5,116,0,0,190,191,5,101,0,0,191,192,5,114,0,0,192,193,5,116,0,0,193,194,
5,104,0,0,194,195,5,97,0,0,195,196,5,110,0,0,196,30,1,0,0,0,197,198,5,105,
0,0,198,199,5,115,0,0,199,200,5,103,0,0,200,201,5,114,0,0,201,202,5,101,
0,0,202,203,5,97,0,0,203,204,5,116,0,0,204,205,5,101,0,0,205,206,5,114,0,
0,206,207,5,116,0,0,207,208,5,104,0,0,208,209,5,97,0,0,209,210,5,110,0,0,
210,211,5,111,0,0,211,212,5,114,0,0,212,213,5,101,0,0,213,214,5,113,0,0,
214,215,5,117,0,0,215,216,5,97,0,0,216,217,5,108,0,0,217,218,5,116,0,0,218,
219,5,111,0,0,219,32,1,0,0,0,220,221,5,105,0,0,221,222,5,115,0,0,222,34,
1,0,0,0,223,224,5,97,0,0,224,225,5,105,0,0,225,226,5,110,0,0,226,227,5,116,
0,0,227,36,1,0,0,0,228,229,5,58,0,0,229,230,5,62,0,0,230,231,5,58,0,0,231,
38,1,0,0,0,232,233,5,58,0,0,233,234,5,60,0,0,234,235,5,58,0,0,235,40,1,0,
0,0,236,237,5,43,0,0,237,42,1,0,0,0,238,239,5,45,0,0,239,44,1,0,0,0,240,
241,5,42,0,0,241,46,1,0,0,0,242,243,5,47,0,0,243,48,1,0,0,0,244,245,5,63,
0,0,245,50,1,0,0,0,246,247,5,91,0,0,247,52,1,0,0,0,248,249,5,93,0,0,249,
54,1,0,0,0,250,251,5,46,0,0,251,56,1,0,0,0,252,253,5,40,0,0,253,58,1,0,0,
0,254,255,5,41,0,0,255,60,1,0,0,0,256,257,5,58,0,0,257,62,1,0,0,0,258,259,
5,116,0,0,259,260,5,114,0,0,260,261,5,117,0,0,261,262,5,101,0,0,262,64,1,
0,0,0,263,264,5,102,0,0,264,265,5,97,0,0,265,266,5,108,0,0,266,267,5,115,
0,0,267,268,5,101,0,0,268,66,1,0,0,0,269,270,7,0,0,0,270,68,1,0,0,0,271,
272,7,1,0,0,272,70,1,0,0,0,273,276,3,67,33,0,274,276,3,69,34,0,275,273,1,
0,0,0,275,274,1,0,0,0,276,72,1,0,0,0,277,281,3,67,33,0,278,280,3,71,35,0,
279,278,1,0,0,0,280,283,1,0,0,0,281,279,1,0,0,0,281,282,1,0,0,0,282,74,1,
0,0,0,283,281,1,0,0,0,284,286,3,69,34,0,285,284,1,0,0,0,286,287,1,0,0,0,
287,285,1,0,0,0,287,288,1,0,0,0,288,76,1,0,0,0,289,293,3,79,39,0,290,292,
3,67,33,0,291,290,1,0,0,0,292,295,1,0,0,0,293,291,1,0,0,0,293,294,1,0,0,
0,294,296,1,0,0,0,295,293,1,0,0,0,296,297,3,79,39,0,297,78,1,0,0,0,298,299,
7,2,0,0,299,80,1,0,0,0,300,302,7,3,0,0,301,300,1,0,0,0,302,303,1,0,0,0,303,
301,1,0,0,0,303,304,1,0,0,0,304,305,1,0,0,0,305,306,6,40,0,0,306,82,1,0,
0,0,307,308,5,47,0,0,308,309,5,47,0,0,309,313,1,0,0,0,310,312,9,0,0,0,311,
310,1,0,0,0,312,315,1,0,0,0,313,314,1,0,0,0,313,311,1,0,0,0,314,316,1,0,
0,0,315,313,1,0,0,0,316,317,5,10,0,0,317,318,1,0,0,0,318,319,6,41,0,0,319,
84,1,0,0,0,320,321,5,47,0,0,321,322,5,42,0,0,322,326,1,0,0,0,323,325,9,0,
0,0,324,323,1,0,0,0,325,328,1,0,0,0,326,327,1,0,0,0,326,324,1,0,0,0,327,
329,1,0,0,0,328,326,1,0,0,0,329,330,5,42,0,0,330,331,5,47,0,0,331,332,1,
0,0,0,332,333,6,42,0,0,333,86,1,0,0,0,334,335,5,103,0,0,335,336,5,105,0,
0,336,337,5,118,0,0,337,338,5,101,0,0,338,88,1,0,0,0,339,340,5,117,0,0,340,
341,5,112,0,0,341,90,1,0,0,0,342,343,5,103,0,0,343,344,5,111,0,0,344,345,
5,110,0,0,345,346,5,110,0,0,346,347,5,97,0,0,347,92,1,0,0,0,348,349,5,116,
0,0,349,350,5,104,0,0,350,351,5,101,0,0,351,352,5,110,0,0,352,94,1,0,0,0,
353,354,5,97,0,0,354,355,5,110,0,0,355,356,5,100,0,0,356,357,5,105,0,0,357,
358,5,102,0,0,358,359,5,117,0,0,359,360,5,97,0,0,360,361,5,115,0,0,361,362,
5,107,0,0,362,363,5,109,0,0,363,364,5,101,0,0,364,365,5,104,0,0,365,366,
5,111,0,0,366,367,5,119,0,0,367,368,5,105,0,0,368,369,5,109,0,0,369,370,
5,102,0,0,370,371,5,101,0,0,371,372,5,101,0,0,372,373,5,108,0,0,373,374,
5,105,0,0,374,375,5,110,0,0,375,376,5,103,0,0,376,96,1,0,0,0,377,378,5,115,
0,0,378,379,5,97,0,0,379,380,5,121,0,0,380,381,5,103,0,0,381,382,5,111,0,
0,382,383,5,111,0,0,383,384,5,100,0,0,384,385,5,98,0,0,385,386,5,121,0,0,
386,387,5,101,0,0,387,98,1,0,0,0,388,389,5,119,0,0,389,390,5,104,0,0,390,
391,5,101,0,0,391,392,5,110,0,0,392,393,5,105,0,0,393,394,5,103,0,0,394,
395,5,105,0,0,395,396,5,118,0,0,396,397,5,101,0,0,397,398,5,109,0,0,398,
399,5,121,0,0,399,100,1,0,0,0,400,401,5,105,0,0,401,402,5,116,0,0,402,403,
5,119,0,0,403,404,5,105,0,0,404,405,5,108,0,0,405,406,5,108,0,0,406,407,
5,98,0,0,407,408,5,101,0,0,408,409,5,99,0,0,409,410,5,111,0,0,410,411,5,
109,0,0,411,412,5,112,0,0,412,413,5,108,0,0,413,414,5,101,0,0,414,415,5,
116,0,0,415,416,5,101,0,0,416,417,5,108,0,0,417,418,5,121,0,0,418,102,1,
0,0,0,419,420,5,116,0,0,420,421,5,111,0,0,421,422,5,103,0,0,422,423,5,101,
0,0,423,424,5,116,0,0,424,425,5,104,0,0,425,426,5,101,0,0,426,427,5,114,
0,0,427,428,5,102,0,0,428,429,5,111,0,0,429,430,5,114,0,0,430,431,5,101,
0,0,431,432,5,118,0,0,432,433,5,101,0,0,433,434,5,114,0,0,434,435,5,119,
0,0,435,436,5,105,0,0,436,437,5,116,0,0,437,438,5,104,0,0,438,104,1,0,0,
0,439,440,5,116,0,0,440,441,5,104,0,0,441,442,5,101,0,0,442,443,5,114,0,
0,443,444,5,101,0,0,444,445,5,97,0,0,445,446,5,105,0,0,446,447,5,110,0,0,
447,448,5,116,0,0,448,449,5,110,0,0,449,450,5,111,0,0,450,451,5,109,0,0,
451,452,5,105,0,0,452,453,5,115,0,0,453,454,5,116,0,0,454,455,5,97,0,0,455,
456,5,107,0,0,456,457,5,105,0,0,457,458,5,110,0,0,458,459,5,103,0,0,459,
106,1,0,0,0,460,461,5,105,0,0,461,462,5,102,0,0,462,463,5,116,0,0,463,464,
5,104,0,0,464,465,5,101,0,0,465,466,5,121,0,0,466,467,5,101,0,0,467,468,
5,118,0,0,468,469,5,101,0,0,469,470,5,114,0,0,470,471,5,103,0,0,471,472,
5,101,0,0,472,473,5,116,0,0,473,474,5,117,0,0,474,475,5,100,0,0,475,476,
5,111,0,0,476,477,5,119,0,0,477,478,5,110,0,0,478,108,1,0,0,0,479,480,5,
119,0,0,480,481,5,101,0,0,481,482,5,107,0,0,482,483,5,110,0,0,483,484,5,
111,0,0,484,485,5,119,0,0,485,486,5,116,0,0,486,487,5,104,0,0,487,488,5,
101,0,0,488,110,1,0,0,0,489,490,5,97,0,0,490,491,5,110,0,0,491,492,5,100,
0,0,492,493,5,119,0,0,493,494,5,101,0,0,494,495,5,39,0,0,495,496,5,114,0,
0,496,497,5,101,0,0,497,498,5,103,0,0,498,499,5,111,0,0,499,500,5,110,0,
0,500,501,5,110,0,0,501,502,5,97,0,0,502,503,5,112,0,0,503,504,5,108,0,0,
504,505,5,97,0,0,505,506,5,121,0,0,506,507,5,105,0,0,507,508,5,116,0,0,508,
112,1,0,0,0,509,510,5,100,0,0,510,511,5,101,0,0,511,512,5,115,0,0,512,513,
5,101,0,0,513,514,5,114,0,0,514,515,5,116,0,0,515,516,5,117,0,0,516,114,
1,0,0,0,517,518,5,114,0,0,518,519,5,117,0,0,519,520,5,110,0,0,520,521,5,
97,0,0,521,522,5,114,0,0,522,523,5,111,0,0,523,524,5,117,0,0,524,525,5,110,
0,0,525,526,5,100,0,0,526,116,1,0,0,0,8,0,275,281,287,293,303,313,326,1,
6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class RickLangLexer extends antlr4.Lexer {

    static grammarFileName = "RickLang.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "','", "'{'", "'}'", "'+='", "'-='", "'*='", 
                         "'/='", "'++'", "'--'", "'or'", "'and'", "'not'", 
                         "'islessthan'", "'islessthanorequalto'", "'isgreaterthan'", 
                         "'isgreaterthanorequalto'", "'is'", "'aint'", "':>:'", 
                         "':<:'", "'+'", "'-'", "'*'", "'/'", "'?'", "'['", 
                         "']'", "'.'", "'('", "')'", "':'", "'true'", "'false'", 
                         null, null, null, null, null, null, null, null, 
                         null, null, "'give'", "'up'", "'gonna'", "'then'", 
                         "'andifuaskmehowimfeeling'", "'saygoodbye'", "'whenigivemy'", 
                         "'itwillbecompletely'", "'togetherforeverwith'", 
                         "'thereaintnomistaking'", "'iftheyevergetudown'", 
                         "'weknowthe'", "'andwe'regonnaplayit'", "'desertu'", 
                         "'runaround'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, "LETTER", "DIGITS", "LETDIG", "ID", 
                          "NUMCONST", "STRINGCONST", "QUOTES", "WS", "COMMENT", 
                          "INLINECOMMENT", "LET", "ASSIGN", "FUN", "THEN", 
                          "IF", "END", "RETURNOP", "RETURNCL", "WHILE", 
                          "TRY", "CATCH", "IMPORTOP", "IMPORTCL", "BREAK", 
                          "CONTINUE" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
                      "T__25", "T__26", "T__27", "T__28", "T__29", "T__30", 
                      "T__31", "T__32", "LETTER", "DIGITS", "LETDIG", "ID", 
                      "NUMCONST", "STRINGCONST", "QUOTES", "WS", "COMMENT", 
                      "INLINECOMMENT", "LET", "ASSIGN", "FUN", "THEN", "IF", 
                      "END", "RETURNOP", "RETURNCL", "WHILE", "TRY", "CATCH", 
                      "IMPORTOP", "IMPORTCL", "BREAK", "CONTINUE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

RickLangLexer.EOF = antlr4.Token.EOF;
RickLangLexer.T__0 = 1;
RickLangLexer.T__1 = 2;
RickLangLexer.T__2 = 3;
RickLangLexer.T__3 = 4;
RickLangLexer.T__4 = 5;
RickLangLexer.T__5 = 6;
RickLangLexer.T__6 = 7;
RickLangLexer.T__7 = 8;
RickLangLexer.T__8 = 9;
RickLangLexer.T__9 = 10;
RickLangLexer.T__10 = 11;
RickLangLexer.T__11 = 12;
RickLangLexer.T__12 = 13;
RickLangLexer.T__13 = 14;
RickLangLexer.T__14 = 15;
RickLangLexer.T__15 = 16;
RickLangLexer.T__16 = 17;
RickLangLexer.T__17 = 18;
RickLangLexer.T__18 = 19;
RickLangLexer.T__19 = 20;
RickLangLexer.T__20 = 21;
RickLangLexer.T__21 = 22;
RickLangLexer.T__22 = 23;
RickLangLexer.T__23 = 24;
RickLangLexer.T__24 = 25;
RickLangLexer.T__25 = 26;
RickLangLexer.T__26 = 27;
RickLangLexer.T__27 = 28;
RickLangLexer.T__28 = 29;
RickLangLexer.T__29 = 30;
RickLangLexer.T__30 = 31;
RickLangLexer.T__31 = 32;
RickLangLexer.T__32 = 33;
RickLangLexer.LETTER = 34;
RickLangLexer.DIGITS = 35;
RickLangLexer.LETDIG = 36;
RickLangLexer.ID = 37;
RickLangLexer.NUMCONST = 38;
RickLangLexer.STRINGCONST = 39;
RickLangLexer.QUOTES = 40;
RickLangLexer.WS = 41;
RickLangLexer.COMMENT = 42;
RickLangLexer.INLINECOMMENT = 43;
RickLangLexer.LET = 44;
RickLangLexer.ASSIGN = 45;
RickLangLexer.FUN = 46;
RickLangLexer.THEN = 47;
RickLangLexer.IF = 48;
RickLangLexer.END = 49;
RickLangLexer.RETURNOP = 50;
RickLangLexer.RETURNCL = 51;
RickLangLexer.WHILE = 52;
RickLangLexer.TRY = 53;
RickLangLexer.CATCH = 54;
RickLangLexer.IMPORTOP = 55;
RickLangLexer.IMPORTCL = 56;
RickLangLexer.BREAK = 57;
RickLangLexer.CONTINUE = 58;



